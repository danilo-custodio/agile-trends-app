{
  "id": "case-002",
  "title": "Geração de Código com Testes",
  "category": "Desenvolvimento",
  "description": "Acelerando a implementação de APIs RESTful com geração de código e testes automatizados",
  "timeReduction": "60%",
  "qualityImprovement": "75%",
  "iconName": "Code",
  "color": "bg-green-100",
  "author": "João Santos",
  "createdAt": "2025-01-20T09:15:00Z",
  "updatedAt": "2025-03-16T13:02:00.571Z",
  "version": 1,
  "highlights": [
    "Criação de 5 endpoints em 1 dia (vs. 3 dias anteriormente)",
    "Cobertura de testes de 92% desde o primeiro commit",
    "Redução de bugs em produção em 40%",
    "Teste"
  ],
  "promptExample": "Crie uma API RESTful em Node.js para gerenciar um catálogo de produtos com os seguintes endpoints...",
  "result": "Código funcional com testes unitários e de integração, pronto para revisão",
  "tabs": {
    "overview": {
      "description": "Este case demonstra como utilizamos LLMs para acelerar o desenvolvimento de APIs RESTful com código de alta qualidade e testes automatizados. O tempo de desenvolvimento foi reduzido significativamente e a qualidade do código aumentou, com alta cobertura de testes desde o início."
    },
    "video": {
      "url": "videos/case-002-demo.mp4",
      "thumbnail": "thumbnails/case-002-video.jpg",
      "highlights": [
        "Demonstração do processo de geração de código",
        "Estrutura da API gerada e organização do código",
        "Integração dos testes automatizados",
        "Comparação com o processo de desenvolvimento tradicional"
      ],
      "resources": [
        {
          "name": "Repositório GitHub",
          "type": "blue-tag",
          "url": "#"
        },
        {
          "name": "Demo online",
          "type": "green-tag",
          "url": "#"
        },
        {
          "name": "Documentação da API",
          "type": "purple-tag",
          "url": "#"
        },
        {
          "name": "Teste 1",
          "type": "blue-tag",
          "url": "#"
        }
      ]
    },
    "process": {
      "steps": [
        "Definição detalhada dos endpoints, modelos de dados e regras de negócio",
        "Criação do prompt com especificações e padrões de código",
        "Geração do código base da API com estrutura de projeto",
        "Solicitação de testes unitários e de integração",
        "Revisão e refinamento com ajustes de performance",
        "Teste"
      ]
    },
    "results": {
      "before": [
        "Desenvolvimento manual e repetitivo",
        "Testes adicionados após implementação",
        "Cobertura de testes inicial baixa (~50%)",
        "Maior incidência de bugs em produção",
        "Teste"
      ],
      "after": [
        "Desenvolvimento rápido e padronizado",
        "Testes criados simultaneamente ao código",
        "Alta cobertura de testes (>90%) desde o início",
        "Redução de bugs em produção em 40%",
        "Teste"
      ]
    },
    "lessons": {
      "whatWorked": [
        "Fornecer especificações detalhadas no prompt",
        "Pedir explicitamente testes para cada componente",
        "Criar uma estrutura de código modular e extensível",
        "Estabelecer padrões de validação e tratamento de erros",
        "Teste"
      ],
      "improvementAreas": [
        "Melhor documentação inline do código gerado",
        "Maior foco em segurança e validação de entradas",
        "Mais atenção a considerações de performance"
      ],
      "tips": [
        "Defina claramente os endpoints, métodos HTTP e formatos de resposta",
        "Especifique o padrão de arquitetura desejado (MVC, Clean, etc.)",
        "Solicite documentação OpenAPI/Swagger junto com o código",
        "Peça testes que cubram casos de erro e exceções",
        "Mantenha o escopo bem definido por iteração",
        "Teste"
      ]
    }
  },
  "summary": "Teste",
  "productName": "Teste"
}